const Promise = require('bluebird');
const fs = Promise.promisifyAll(require('fs'));
const { assert } = require('chai');
const path = require('path');
const mkdirp = Promise.promisify(require('mkdirp'));
const touch = Promise.promisify(require('touch'));
const rimraf = Promise.promisify(require('rimraf'));
const keepLatest = require('../');


const TEST_DIR = './testrun';

describe('hooks', () => {

  before((done) => {
    // runs before all tests in this block
    mkdirp(TEST_DIR)
    .then(() => {
      const files = [1,2,3,4,5].map(i => path.join(TEST_DIR, `${i}.jpg`));
      Promise.map(files, file => touch(file, {}))
      .then(() => done());
    });
  });

  it('should work', (done) => {
    fs.readdirAsync(TEST_DIR)
    .then(files => {
      assert(files.length, 5);
      keepLatest(2, TEST_DIR + '/*')
      .then((res) => {
        console.log(res);
        fs.readdirAsync(TEST_DIR)
        .then(files => {
          assert(files.length, 2);
          done();
        });
      })
    })
  });

  after((done) => {
    // runs after all tests in this block
    rimraf(TEST_DIR)
    .then(done);
  });
});

